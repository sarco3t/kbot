name: KBOT-CICD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  TARGETARCH: amd64
  TARGETOS: linux
  CGO_ENABLED: 0
  
jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'
          cache: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m

      - name: Build
        run: make build TARGETARCH=${{ env.TARGETARCH }} TARGETOS=${{ env.TARGETOS }}

  cd:
    name: CD
    needs: ci
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'
          cache: true

      - name: Set version
        run: |
          VERSION=$(git describe --tags --abbrev=0)-$(git rev-parse --short HEAD)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Using version: $VERSION"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: sarco3t
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          APP: "kbot"
          REGISTRY: ghcr.io/sarco3t
        run: |
          make push \
            TARGETARCH=${{ env.TARGETARCH }} \
            TARGETOS=${{ env.TARGETOS }} \
            VERSION=${{ env.VERSION }}

      - name: Update Helm chart
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.image.tag=strenv(VERSION) | .image.arch=strenv(TARGETARCH)' helm/values.yaml

      - name: Set chart version
        run: |
          CHART_VERSION=$(git describe --tags --abbrev=0 | sed 's/^v//')
          echo "CHART_VERSION=$CHART_VERSION" >> $GITHUB_ENV
          echo "Using version: $CHART_VERSION"

      - name: Update Chart.yaml
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.version = strenv(CHART_VERSION)' helm/Chart.yaml

      - name: Update Chart.yaml
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.appVersion = strenv(VERSION)' helm/Chart.yaml


      - name: Commit Helm chart changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add helm/values.yaml
          git commit -m "chore: update version to ${{ env.VERSION }}"
          git push

      - name: Cleanup
        run: make clean TARGETARCH=${{ env.TARGETARCH }}